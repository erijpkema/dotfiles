# This is a bash snippet, to be sourced from .profile
# NB Do not source this snippet multiple times. It'll clutter your environment.

# For good measure: default compiler flags for the C++ course
export CXXFLAGS="${CXXFLAGS} -Wall -std=c++14"

if [ -x /usr/local/bin/g++ ] ; then
    GCCBASE="/usr/local"
elif [ -x /usr/bin/g++ ] ; then
    # probably everything else is already setup by the package management.
    # Otherwise good luck.
    return 0
else
    echo "Could not find g++ "
    return 1
fi

echo $GCCBASE
# Find all dirs containing libraries.
# TODO: This search is a bit expensive.
LIBDIRS="$(find ${GCCBASE} -iname \*\.so\.\* -exec dirname {} \;|sort |uniq|grep -v 32$|tr '\n' ':')"

# If you want the newer tools by default, put them at the beginning of $PATH
export PATH="${PATH}:${GCCBASE}/bin"

# Have Make pick the newer compiler
export CXX="${GCCBASE}/bin/g++"
export CC="${GCCBASE}/bin/gcc"

# This is for during compile: prefer newer headers
export CPLUS_INCLUDE_PATH="${GCCBASE}/include:${CPLUS_INCLUDE_PATH}"

# This is for linking during build: prefer newer libraries
# (with 5.2, this seems to affect run-time)
export LD_LIBRARY_PATH="${LIBDIRS}:${LD_LIBRARY_PATH}"

# WIth 5.2, this affects build time
export LIBRARY_PATH="${LIBDIRS}:${LIBRARY_PATH}"

# This is for runtime linking: prefer older libraries
#export LD_RUN_PATH="${LD_RUNPATH}:${GCCBASE}/lib/../lib64"

# Man should also find the newer manpages
export MANPATH="${MANPATH}:${GCCBASE}/share/man"

echo "Set up to use ${CXX} and ${CC}"
